#!/bin/bash

# define variables

MenuChoice=""
CurrentDirectory=""
TemporaryDirectory=""
WorkingDirectory=$(pwd)
Version="1.2a"
wHomeWinPath=$(cmd.exe /c 'echo %HOMEDRIVE%%HOMEPATH%' 2>&1 | tr -d '\r')
wHome=$(wslpath -u "${wHomeWinPath}")

# define functions

function processarguments {
while [[ $# -gt 0 ]]
do
  case "$1" in
    --debug|-d|--verbose|-v)
      echo "Running in Debug mode"
      set -x
      shift
    ;;
    *)
      shift
    esac
done
}

function welcomeprompt {
whiptail --title "Welcome to WLinux" --msgbox "Thank you for supporting sustainable independent open source development.\n
WLinux comes with a core set of useful packages pre-installed, such as curl, git, and wslu. \n
wlinux-setup allows you to install additional hand-curated selections for WLinux and configure optional WSL-specific settings. \n
Many more packages are available via the apt package manager and optional pip, npm, and RubyGems package managers.\
" 15 96
}

function continueprompt {
if (whiptail --title "Continue setup?" --yesno "Would you like to continue wlinux-setup?" 8 45) then
    echo "Starting wlinux-setup."
else
    echo "Exiting wlinux-setup."
    echo "You may run the script again any time by running: $ wlinux-setup"
    exit 0
fi
}

function updateupgrade {
echo "Updating WLinux..."
sudo apt update
sudo apt upgrade -y
sudo apt autoremove -y
}

function createtmp {
    echo "Saving current directory $(pwd)"
    CurrentDirectory=$(pwd)
    TemporaryDirectory=$(mktemp -d)
    echo "Going to $TemporaryDirectory"
    cd $TemporaryDirectory
}

function cleantmp {
    echo "Returning to $CurrentDirectory"
    cd $CurrentDirectory
    echo "Cleaning up $TemporaryDirectory"
    sudo rm -r $TemporaryDirectory
}

function byemessage {
    whiptail --title "Setup is complete." --msgbox "You may run wlinux-setup again any time by typing $ wlinux-setup\n\nYou may open a browser link to get help any time by typing: $ wlinux-help" 8 80
    exit 0
}

# main menu

function installmenu {

MenuChoice=$(
whiptail --title "wlinux-setup" --checklist --separate-output "\nHand-curated add-ons [SPACE to select, ENTER to confirm]:" 22 99 15 \
    "LANGUAGE" "Change default language and keyboard setting in WLinux" off \
    "EXPLORER" "Enable right-click on folders in Windows Explorer to open them in WLinux  " off \
    "SHELLS" "Install and configure zsh, csh, and fish" off \
    "EDITORS" "Install text editors neovim, emacs, or Visual Studio Code (requires X)" off \
    "PYTHONPI" "Install Python 3.7 and download and install latest PyPi" off \
    "NODEJS" "Install Node.js and npm" off \
    "GO" "Install the latest Go from Google" off \
    "RUBY" "Install Ruby using rbenv and optionally install Rails" off \
    "RUST" "Install latest version of Rust via rustup installer" off \
    "DOTNET" "Install .NET Core SDK from Microsoft and optionally install NuGet" off \
    "JAVA" "Install the Java OpenJDK and JRE" off \
    "POWERSHELL" "Install PowerShell for Linux and/or Azure CLI tools" off \
    "GUI" "Install the basics needed for most GUI apps and configure GUI options" off \
    "DOCKER" "Install a secure bridge to Docker for Windows" off \
    "CASSANDRA" "Install the NoSQL server Cassandra from Apache" off \
    "NONE" "" on 3>&1 1>&2 2>&3
)

echo "Selected:" $MenuChoice

if [[ $MenuChoice == *"LANGUAGE"* ]] ; then
  echo "LANGUAGE"
  . $WorkingDirectory/wlinux-setup.d/language
fi

if [[ $MenuChoice == *"EXPLORER"* ]] ; then
  echo "EXPLORER"
  . $WorkingDirectory/wlinux-setup.d/explorer
fi

if [[ $MenuChoice == *"SHELLS"* ]] ; then
  echo "SHELLS"
  . $WorkingDirectory/wlinux-setup.d/shells
fi

if [[ $MenuChoice == *"EDITORS"* ]] ; then
  echo "EDITORS"
  . $WorkingDirectory/wlinux-setup.d/editors
fi 

if [[ $MenuChoice == *"PYTHON"* ]] ; then
  echo "PYTHON"
  . $WorkingDirectory/wlinux-setup.d/python
fi

if [[ $MenuChoice == *"NODE"* ]] ; then
  echo "NODE"
  . $WorkingDirectory/wlinux-setup.d/nodejs
fi

if [[ $MenuChoice == *"GO"* ]] ; then
  echo "GO"
  . $WorkingDirectory/wlinux-setup.d/golang
fi

if [[ $MenuChoice == *"RUBY"* ]] ; then
  echo "RUBY"
  . $WorkingDirectory/wlinux-setup.d/ruby
fi

if [[ $MenuChoice == *"RUST"* ]] ; then
  echo "RUST"
  . $WorkingDirectory/wlinux-setup.d/rust
fi

if [[ $MenuChoice == *"DOTNET"* ]] ; then
  echo "DOTNET"
  . $WorkingDirectory/wlinux-setup.d/dotnet
fi

if [[ $MenuChoice == *"JAVA"* ]] ; then
  echo "JAVA"
  . $WorkingDirectory/wlinux-setup.d/java
fi

if [[ $MenuChoice == *"POWERSHELL"* ]] ; then
  echo "POWERSHELL"
  . $WorkingDirectory/wlinux-setup.d/powershell
  . $WorkingDirectory/wlinux-setup.d/azurecli
fi

if [[ $MenuChoice == *"GUI"* ]] ; then
  echo "GUI"
  . $WorkingDirectory/wlinux-setup.d/gui
fi

if [[ $MenuChoice == *"DOCKER"* ]] ; then
  echo "DOCKER"
  . $WorkingDirectory/wlinux-setup.d/docker
fi

if [[ $MenuChoice == *"CASSANDRA"* ]] ; then
  echo "CASSANDRA"
  . $WorkingDirectory/wlinux-setup.d/cassandra
fi

if [[ $MenuChoice == "NONE" ]] ; then
    echo "NONE"
    whiptail --title "No selection" --msgbox "Please select your desired options using the SPACE bar and then hit ENTER to confirm." 8 80
    installmenu
fi
}

# main

processarguments  "$@"
welcomeprompt
continueprompt
updateupgrade
installmenu
byemessage

exit 0
